function cov_x3k8epmt4(){var path="C:\\Users\\mertt\\perfanalytic\\perfanalytics\\backend\\dbconnection.js";var hash="3518a8e1332eba3a1b61c4c94182c4a4e1053a67";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\Users\\mertt\\perfanalytic\\perfanalytics\\backend\\dbconnection.js",statementMap:{"0":{start:{line:1,column:17},end:{line:1,column:36}},"1":{start:{line:2,column:0},end:{line:2,column:27}},"2":{start:{line:5,column:2},end:{line:45,column:5}},"3":{start:{line:28,column:4},end:{line:43,column:9}},"4":{start:{line:35,column:8},end:{line:42,column:9}},"5":{start:{line:37,column:24},end:{line:37,column:53}},"6":{start:{line:38,column:10},end:{line:38,column:24}},"7":{start:{line:41,column:10},end:{line:41,column:47}},"8":{start:{line:49,column:2},end:{line:49,column:31}},"9":{start:{line:52,column:0},end:{line:52,column:36}}},fnMap:{"0":{name:"connect",decl:{start:{line:4,column:9},end:{line:4,column:16}},loc:{start:{line:4,column:22},end:{line:46,column:1}},line:4},"1":{name:"(anonymous_1)",decl:{start:{line:5,column:21},end:{line:5,column:22}},loc:{start:{line:5,column:42},end:{line:45,column:3}},line:5},"2":{name:"(anonymous_2)",decl:{start:{line:34,column:12},end:{line:34,column:13}},loc:{start:{line:34,column:26},end:{line:43,column:7}},line:34},"3":{name:"close",decl:{start:{line:48,column:9},end:{line:48,column:14}},loc:{start:{line:48,column:17},end:{line:50,column:1}},line:48}},branchMap:{"0":{loc:{start:{line:35,column:8},end:{line:42,column:9}},type:"if",locations:[{start:{line:35,column:8},end:{line:42,column:9}},{start:{line:35,column:8},end:{line:42,column:9}}],line:35}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},f:{"0":0,"1":0,"2":0,"3":0},b:{"0":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"3518a8e1332eba3a1b61c4c94182c4a4e1053a67"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_x3k8epmt4=function(){return actualCoverage;};}return actualCoverage;}cov_x3k8epmt4();const mongoose=(cov_x3k8epmt4().s[0]++,require("mongoose"));cov_x3k8epmt4().s[1]++;require("dotenv").config();//config objesi alıp içinde path alabiliyor
function connect(URI){cov_x3k8epmt4().f[0]++;cov_x3k8epmt4().s[2]++;return new Promise((resolve,reject)=>{cov_x3k8epmt4().f[1]++;cov_x3k8epmt4().s[3]++;// if (process.env.ENV === "test") {
//   console.log("test env");
//   const Mockgoose = require("mockgoose").Mockgoose;
//   const mockgoose = new Mockgoose(mongoose);
//   mockgoose.prepareStorage().then(() => {
//     mongoose.connect
//       .connect(uri, {
//         useNewUrlParser: true,
//         useCreateIndex: true,
//         useUnifiedTopology: true,
//       })
//       .then((res, err) => {
//         if (err) {
//           console.log("db connection failed");
//           return reject(err);
//         } else {
//           console.log("connected db successfully");
//           resolve();
//         }
//       });
//   });
// } else {
mongoose.connect(URI,{useNewUrlParser:true,useCreateIndex:true,useUnifiedTopology:true}).then((res,err)=>{cov_x3k8epmt4().f[2]++;cov_x3k8epmt4().s[4]++;if(err){cov_x3k8epmt4().b[0][0]++;// console.log("db connection failed");
const error=(cov_x3k8epmt4().s[5]++,["db connection failed",err]);cov_x3k8epmt4().s[6]++;reject(error);}else{cov_x3k8epmt4().b[0][1]++;cov_x3k8epmt4().s[7]++;// return ();
resolve(["db connection done",res]);}});// }
});}function close(){cov_x3k8epmt4().f[3]++;cov_x3k8epmt4().s[8]++;return mongoose.disconnect();}cov_x3k8epmt4().s[9]++;module.exports={connect,close};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRiY29ubmVjdGlvbi5qcyJdLCJuYW1lcyI6WyJtb25nb29zZSIsInJlcXVpcmUiLCJjb25maWciLCJjb25uZWN0IiwiVVJJIiwiUHJvbWlzZSIsInJlc29sdmUiLCJyZWplY3QiLCJ1c2VOZXdVcmxQYXJzZXIiLCJ1c2VDcmVhdGVJbmRleCIsInVzZVVuaWZpZWRUb3BvbG9neSIsInRoZW4iLCJyZXMiLCJlcnIiLCJlcnJvciIsImNsb3NlIiwiZGlzY29ubmVjdCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJ5K0RBZVk7eUZBZlosS0FBTUEsQ0FBQUEsUUFBUSx5QkFBR0MsT0FBTyxDQUFDLFVBQUQsQ0FBVixDQUFkLEMsdUJBQ0FBLE9BQU8sQ0FBQyxRQUFELENBQVAsQ0FBa0JDLE1BQWxCLEdBQTRCO0FBRTVCLFFBQVNDLENBQUFBLE9BQVQsQ0FBaUJDLEdBQWpCLENBQXNCLCtDQUNwQixNQUFPLElBQUlDLENBQUFBLE9BQUosQ0FBWSxDQUFDQyxPQUFELENBQVVDLE1BQVYsR0FBcUIsK0NBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0FQLFFBQVEsQ0FDTEcsT0FESCxDQUNXQyxHQURYLENBQ2dCLENBQ1pJLGVBQWUsQ0FBRSxJQURMLENBRVpDLGNBQWMsQ0FBRSxJQUZKLENBR1pDLGtCQUFrQixDQUFFLElBSFIsQ0FEaEIsRUFNR0MsSUFOSCxDQU1RLENBQUNDLEdBQUQsQ0FBTUMsR0FBTixHQUFjLCtDQUNsQixHQUFJQSxHQUFKLENBQVMsMkJBQ1A7QUFDQSxLQUFNQyxDQUFBQSxLQUFLLHlCQUFHLENBQUMsc0JBQUQsQ0FBeUJELEdBQXpCLENBQUgsQ0FBWCxDQUZPLHVCQUdQTixNQUFNLENBQUNPLEtBQUQsQ0FBTixDQUNELENBSkQsSUFJTyxrREFDTDtBQUNBUixPQUFPLENBQUMsQ0FBQyxvQkFBRCxDQUF1Qk0sR0FBdkIsQ0FBRCxDQUFQLENBQ0QsQ0FDRixDQWZILEVBZ0JBO0FBQ0QsQ0F4Q00sQ0FBUCxDQXlDRCxDQUVELFFBQVNHLENBQUFBLEtBQVQsRUFBaUIsK0NBQ2YsTUFBT2YsQ0FBQUEsUUFBUSxDQUFDZ0IsVUFBVCxFQUFQLENBQ0QsQyx1QkFFREMsTUFBTSxDQUFDQyxPQUFQLENBQWlCLENBQUVmLE9BQUYsQ0FBV1ksS0FBWCxDQUFqQiIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IG1vbmdvb3NlID0gcmVxdWlyZShcIm1vbmdvb3NlXCIpO1xyXG5yZXF1aXJlKFwiZG90ZW52XCIpLmNvbmZpZygpOyAvL2NvbmZpZyBvYmplc2kgYWzEsXAgacOnaW5kZSBwYXRoIGFsYWJpbGl5b3JcclxuXHJcbmZ1bmN0aW9uIGNvbm5lY3QoVVJJKSB7XHJcbiAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcclxuICAgIC8vIGlmIChwcm9jZXNzLmVudi5FTlYgPT09IFwidGVzdFwiKSB7XHJcbiAgICAvLyAgIGNvbnNvbGUubG9nKFwidGVzdCBlbnZcIik7XHJcbiAgICAvLyAgIGNvbnN0IE1vY2tnb29zZSA9IHJlcXVpcmUoXCJtb2NrZ29vc2VcIikuTW9ja2dvb3NlO1xyXG4gICAgLy8gICBjb25zdCBtb2NrZ29vc2UgPSBuZXcgTW9ja2dvb3NlKG1vbmdvb3NlKTtcclxuICAgIC8vICAgbW9ja2dvb3NlLnByZXBhcmVTdG9yYWdlKCkudGhlbigoKSA9PiB7XHJcbiAgICAvLyAgICAgbW9uZ29vc2UuY29ubmVjdFxyXG4gICAgLy8gICAgICAgLmNvbm5lY3QodXJpLCB7XHJcbiAgICAvLyAgICAgICAgIHVzZU5ld1VybFBhcnNlcjogdHJ1ZSxcclxuICAgIC8vICAgICAgICAgdXNlQ3JlYXRlSW5kZXg6IHRydWUsXHJcbiAgICAvLyAgICAgICAgIHVzZVVuaWZpZWRUb3BvbG9neTogdHJ1ZSxcclxuICAgIC8vICAgICAgIH0pXHJcbiAgICAvLyAgICAgICAudGhlbigocmVzLCBlcnIpID0+IHtcclxuICAgIC8vICAgICAgICAgaWYgKGVycikge1xyXG4gICAgLy8gICAgICAgICAgIGNvbnNvbGUubG9nKFwiZGIgY29ubmVjdGlvbiBmYWlsZWRcIik7XHJcbiAgICAvLyAgICAgICAgICAgcmV0dXJuIHJlamVjdChlcnIpO1xyXG4gICAgLy8gICAgICAgICB9IGVsc2Uge1xyXG4gICAgLy8gICAgICAgICAgIGNvbnNvbGUubG9nKFwiY29ubmVjdGVkIGRiIHN1Y2Nlc3NmdWxseVwiKTtcclxuICAgIC8vICAgICAgICAgICByZXNvbHZlKCk7XHJcbiAgICAvLyAgICAgICAgIH1cclxuICAgIC8vICAgICAgIH0pO1xyXG4gICAgLy8gICB9KTtcclxuICAgIC8vIH0gZWxzZSB7XHJcbiAgICBtb25nb29zZVxyXG4gICAgICAuY29ubmVjdChVUkksIHtcclxuICAgICAgICB1c2VOZXdVcmxQYXJzZXI6IHRydWUsXHJcbiAgICAgICAgdXNlQ3JlYXRlSW5kZXg6IHRydWUsXHJcbiAgICAgICAgdXNlVW5pZmllZFRvcG9sb2d5OiB0cnVlLFxyXG4gICAgICB9KVxyXG4gICAgICAudGhlbigocmVzLCBlcnIpID0+IHtcclxuICAgICAgICBpZiAoZXJyKSB7XHJcbiAgICAgICAgICAvLyBjb25zb2xlLmxvZyhcImRiIGNvbm5lY3Rpb24gZmFpbGVkXCIpO1xyXG4gICAgICAgICAgY29uc3QgZXJyb3IgPSBbXCJkYiBjb25uZWN0aW9uIGZhaWxlZFwiLCBlcnJdO1xyXG4gICAgICAgICAgcmVqZWN0KGVycm9yKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgLy8gcmV0dXJuICgpO1xyXG4gICAgICAgICAgcmVzb2x2ZShbXCJkYiBjb25uZWN0aW9uIGRvbmVcIiwgcmVzXSk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9KTtcclxuICAgIC8vIH1cclxuICB9KTtcclxufVxyXG5cclxuZnVuY3Rpb24gY2xvc2UoKSB7XHJcbiAgcmV0dXJuIG1vbmdvb3NlLmRpc2Nvbm5lY3QoKTtcclxufVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSB7IGNvbm5lY3QsIGNsb3NlIH07XHJcbiJdfQ==